import pygame
import random
import math
pygame.init()
font = pygame.font.Font('freesansbold.ttf', 20)
LEFT = 0
RIGHT = 1
UP = 2
DOWN = 3
py = 0
px = 0

class npc:
    def __init__(self):
        self.xpos = 100
        self.ypos = 500
        self.direction = RIGHT
        self.isAlive = True
        self.isTalking = False
        self.talkTimer = 0
        self.label = "hello."
        self.text_surface = font.render(self.label, False, (255,255,255)) 
    def talk(self, ticker):
        if self.isTalking == False:
            self.talkTimer = ticker
            self.isTalking = True
            num = random.randrange(0, 3)
            if num == 0:
                self.label = "hey you, you're finally awake!"
            elif num == 1:
                self.label = "Scotland is not a real country, you are an englishman with a dress!"
            elif num == 2:
                self.label = "It's a secret to everyone"
            else:
                self.label = "I like to wear shorts. Thier comfy and easy to wear."
            
            self.text_surface = font.render(self.label, False, (255,255,255))
            
            
    def draw(self,screen, ticker):
        if self.isAlive == True:
            pygame.draw.circle(screen, (0, 250, 250), (self.xpos, self.ypos),  20)
        if ticker-self.talkTimer < 200:
            pygame.draw.rect(screen, (0, 0, 0), (self.xpos, self.ypos, 800, 200))
            screen.blit(self.text_surface, (self.xpos+20, self.ypos+20))
        else:
            self.isTalking = False
    def move(self, map, ticker):
        if ticker % 40 == 0:
            num = random.randrange(0, 4)
            if num == 0:
                self.direction = RIGHT
            elif num == 1:
                self.direction = LEFT
            elif num == 2:
                self.direction = UP
            elif num == 3:
                self.direction = DOWN
                
        if self.direction == RIGHT and map[int((self.ypos) / 50)][int( (self.xpos + 20) / 50)] ==2:
            self.direction = LEFT
            self.xpos -= 6
        if self.direction == LEFT and map[int((self.ypos) / 50)][int( (self.xpos - 5) / 50)] ==2:
            self.direction = RIGHT
            self.xpos += 6
        if self.direction == UP and map[int((self.ypos -5) / 50)][int( (self.xpos) / 50)] ==2:
            self.direction = DOWN
            self.ypos += 6
        if self.direction == DOWN and map[int((self.ypos +20) / 50)][int( (self.xpos) / 50)] ==2:
            self.direction = UP
            self.ypos -= 6
            
                
        if self.direction == RIGHT:
            self.xpos += 1
        elif self.direction == LEFT:
            self.xpos -= 1
        elif self.direction == UP:
            self.ypos += 1
        elif self.direction == DOWN:
            self.ypos -= 1
            
            
