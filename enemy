import pygame
import random
import math
LEFT = 0
RIGHT = 1
UP = 2
DOWN = 3
SPACE = 4

enemy2 = pygame.image.load('enemy2.png')

class enemy:
    def __init__(self):
        self.xpos = 800
        self.ypos = 200
        self.direction = RIGHT
        self.isAlive = True 
        self.frameWidth = 32
        self.frameHeight = 32
        self.RowNum = 3
        self.frameNum = 3
        self.ticker = 1
    def draw(self,screen):
        #pygame.draw.rect(screen, (255, 100, 55), (self.xpos, self.ypos, 30, 30))
        screen.blit(enemy2, (self.xpos, self.ypos), (self.frameWidth*self.frameNum, self.RowNum*self.frameHeight, self.frameWidth, self.frameHeight,))
        #print("enemy is at", self.xpos, self.ypos)
        
        
    def move(self, map, ticker, px, py):
        if ticker % 40 == 0:
            num = random.randrange(0, 4)
            if num == 0:
                self.direction = RIGHT
            elif num == 1:
                self.direction = LEFT
            elif num == 2:
                self.direction = UP
            elif num == 3:
                self.direction = DOWN
        
        
        if abs(int(py/50) - int(self.ypos/50))<2:
            if px < self.xpos:
                self.xpos-=1
                self.direction = LEFT
                self.RowNum = 1
            else:
                self.xpos+=1
                self.direction = RIGHT
                self.RowNum = 2
                
        if abs(int(px/50) - int(self.xpos/50))<2:
            if py < self.ypos:
                self.ypos-=1
                self.direction = DOWN
                self.RowNum = 0
            else:
                self.ypos+=1
                self.direction = UP
                self.RowNum = 3
                
        if self.direction == RIGHT and map[int((self.ypos) / 50)][int( (self.xpos + 20) / 50)] ==2:
            #print("bumped right!")
            self.direction = UP
            self.xpos -= 6
        if self.direction == LEFT and map[int((self.ypos) / 50)][int( (self.xpos-5) / 50)] ==2:
            #print("bumped left")
            self.direction = DOWN
            self.xpos += 6
            
            
        if self.direction == UP and map[int((self.ypos -5) / 50)][int( (self.xpos) / 50)] ==2:
            self.direction = RIGHT
            self.ypos += 6
        if self.direction == DOWN and map[int((self.ypos +20) / 50)][int( (self.xpos) / 50)] ==2:
            self.direction = UP
            self.ypos -= 6
            
        if self.direction == RIGHT:
            self.xpos += 1
        elif self.direction == LEFT:
            self.xpos -= 1
        elif self.direction == UP:
            self.ypos += 1
        elif self.direction == DOWN:
            self.ypos -= 1
            
    def die(self, ballx, bally):
        if math.sqrt((self.xpos-ballx)**2 + (self.ypos-bally)**2) <= 20:
            self.isAlive = False
