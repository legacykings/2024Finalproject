import pygame
import math

LEFT = 0
RIGHT = 1
UP = 2
DOWN = 3
SPACE = 4

#playersprite2 = pygame.image.load('playersprite2.png')

class player:
    def __init__(self):
        
        self.xpos = 100
        self.ypos = 100
        self.vx = 0
        self.vy = 0
        self.direction = DOWN
        self.health = 200
        self.inventory = []
        self.frameWidth = 16*3
        self.frameHeight = 24*3
        self.RowNum = 3
        self.frameNum = 3
        self.ticker = 1


    def draw(self,screen):
        pygame.draw.rect(screen, (255, 0, 255), (self.xpos, self.ypos, 30, 30))
        #screen.blit(playersprite2, (self.xpos, self.ypos), (self.frameWidth*self.frameNum, self.RowNum*self.frameHeight, self.frameWidth, self.frameHeight,))
        
    def move(self, keys, map):
        
        if keys[LEFT] == True:
            self.direction = LEFT
            self.vx = -3
            self.RowNum = 1
            
        elif keys[RIGHT] == True:
            self.direction = RIGHT
            self.vx = 3
            self.RowNum = 2
            
        else:
            self.vx = 0
            
        if keys[UP] == True:
            self.direction = UP
            self.vy = -3
            self.RowNum = 3
            
        elif keys[DOWN] == True:
            self.direction = DOWN
            self.vy = 3
            self.RowNum = 0
            
        else:
            self.vy = 0
            
            
        #check collision with walls
        if map[int((self.ypos) / 50)][int((self.xpos - 5) / 50)] == 2: #left
            self.xpos+=3
            print("player left collision")
        if map[int((self.ypos) / 50)][int((self.xpos +30 + 5) / 50)] == 2:#right
            self.xpos-=3
            print("player right collision")
        if map[int((self.ypos) / 50)][int((self.xpos - 5) / 50)] == 1: #left
            self.xpos+=3
            print("player left collision")
        if map[int((self.ypos) / 50)][int((self.xpos +30 + 5) / 50)] == 1: #right
            self.xpos-=3
            print("player right collision")
        if map[int((self.ypos- 5) / 50)][int((self.xpos - 10) / 50)] == 2 or map[int((self.ypos- 5) / 50)][int((self.xpos - 10) / 50)] == 1:
            self.ypos+=3
            print("player up collision")
        if map[int((self.ypos+30) / 50)][int((self.xpos) / 50)] == 2 or map[int((self.ypos+30) / 50)][int((self.xpos) / 50)] == 1:
             self.ypos-=3
             print("player down collision")
#         if map[int((self.ypos- 3) / 50)][int((self.xpos - 10) / 50)] == 1:
#             self.ypos+=3
#         if map[int((self.ypos+30) / 50)][int((self.xpos) / 50)] == 1:
#             self.xpos-=3
        
            
        self.xpos+=self.vx
        self.ypos+=self.vy
        
    def ouch(self, enemyX, enemyY):
        if math.sqrt((self.xpos-enemyX)**2 + (self.ypos-enemyY)**2) <= 20:
            self.health -= 1
            
    def collect_item(self, item):
        item.collect()
        self.inventory.append(item)
